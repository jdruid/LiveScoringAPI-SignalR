// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using LiveScoringWeb.LiveScoringAPI;
using LiveScoringWeb.LiveScoringAPI.Models;
using Microsoft.Rest;

namespace LiveScoringWeb.LiveScoringAPI
{
    public static partial class LiveScoringAPIClientExtensions
    {
        /// <param name='operations'>
        /// Reference to the
        /// LiveScoringWeb.LiveScoringAPI.ILiveScoringAPIClient.
        /// </param>
        public static string RandomizeScores(this ILiveScoringAPIClient operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ILiveScoringAPIClient)s).RandomizeScoresAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// LiveScoringWeb.LiveScoringAPI.ILiveScoringAPIClient.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> RandomizeScoresAsync(this ILiveScoringAPIClient operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.RandomizeScoresWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// LiveScoringWeb.LiveScoringAPI.ILiveScoringAPIClient.
        /// </param>
        /// <param name='player'>
        /// Required.
        /// </param>
        public static object RecordScore(this ILiveScoringAPIClient operations, Player player)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ILiveScoringAPIClient)s).RecordScoreAsync(player);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// LiveScoringWeb.LiveScoringAPI.ILiveScoringAPIClient.
        /// </param>
        /// <param name='player'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<object> RecordScoreAsync(this ILiveScoringAPIClient operations, Player player, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<object> result = await operations.RecordScoreWithOperationResponseAsync(player, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
